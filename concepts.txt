What is Git and GitHub ?
	-Git is a version control software
	-GitHub is a web server

What is the use of Git?
	-for version controlling 
	-for collaboration[code sync]

Terms used in Git
	-Repositry : space/repository for the project
	-commit : same as "save"
	-branches
	-merge
	-Fork
		- Taking the copy of entire repository from one git account to another git account
		- exact replica of master branch
	-pull request - Taking some other branch code to the master/other branch
	

Git Commands 

1)git init       	-> initialise the git repository at your local machine.
2)git clone url  	-> github git repository present remotely
2)git status 	 	-> It will show the your branch you are at with modified files.
3)git commit  -a -m 	-> [ a stands for all changes and -m is for messege]
							example - git commit -a -m "something changed in file"	

4)When i made any git changes for the first we need to tell your computer who i'm (i.e git needs a author that is associated with this particular change) there it will ask you to define who you are by these commands-
					
->git config --global user.email "username@gmail.com"(should be the same you singed-in in git)
->git config --global user.name "username"

5)git config --list 	-> listing the configuration setting for git on your local machine

6)git log -> Allows you to see locally git commits. 
	example - git log -2 [-2 defines number of last commits you wanna see ]

7)use :Q to get out of editor showing(END).

9)git remote 	-> list all the remotes associated with my projects
	example - git remote -v[v stands for verbose i.e it will show the url ]

10)git push origin branchName -> 
	ex- git push origin[remotename] master[branch]
	
11)git pull
	
11)git add 	-> add new files 
		example -  git add filename.txt
12)git add . 	->[. will add any changes made in repository]
	now commit changes - git commit -m "adding new file text"
	
13)git diff

	working dir --->  staging area -----> local area 

	Animal------> add  ----> Animal  ---------> (empty)
	Bird			



	GIT ADD will add the file into staging area


	1) Difference in file content between working dir and staging area

		diff --git a/concepts b/concepts
		index 9526f7d..0bfbe13 100644
		--- a/concepts
		+++ b/concepts
		@@ -52,5 +52,5 @@ Git Commands
		        
		 13)git diff
		 
		-       working dir --->  staging dir -----> local dir 
		+       working dir --->  staging area -----> local area


		a/concepts -- represent source (staging area)

		b/concepts  -- represents destination (working dir)

		9526f7d - hash of the file content -- (source/staging area)

		0bfbe13 - hash of the file content -- (destination/working area)

		100644 -- git file mode
		100 -- type of the file
		644 -- file permissions   -- rw-r-r

		4- represent reading
		2- write 
		1- execute

	2)	Difference in file content between WORKING DIR and LAST COMMMIT

		GIT COMMIT will COPY the file whatever we have in STAGING AREA TO LOCAL REPOSITORY

		--> LAST COMMIT is always refered as HEAD

		--> git diff HEAD <filename>

	3) Difference in file content between STAGING and LAST COMMIT
	
		to represent STAGE USE --staged	

		git diff --staged HEAD <filename>  OR git diff --cached HEAD <filename> 


	3) Difference in file content between SPECIFIC COMMIT and Working Dir

		git log --oneline  -- > get commit id

		git diff <commitid> <filename>







